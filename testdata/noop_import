-- in.patch --
@@
var to identifier
@@
import(
-	to "conversion/to.git"
+	"go.uber.org/thriftrw/ptr"
)

-	to.StrPtr(...)
+	ptr.String(...)

@@
var to identifier
@@
import(
-	to "conversion/to.git"
+	"go.uber.org/thriftrw/ptr"
)

-	to.BoolPtr(...)
+	ptr.Bool(...)

-- remove_all.in.go --
package main

import (
	"conversion/to.git"
)

func foo(s string) *bool {
	if to.StrPtr(s) == nil {
		return to.BoolPtr(false)
	}

	return to.BoolPtr(true)
}

-- remove_all.out.go --
package main

import "go.uber.org/thriftrw/ptr"

func foo(s string) *bool {
	if ptr.String(s) == nil {
		return ptr.Bool(false)
	}

	return ptr.Bool(true)
}

-- remove_all.diff --
--- remove_all.go
+++ remove_all.go
@@ -1,13 +1,11 @@
 package main
 
-import (
-	"conversion/to.git"
-)
+import "go.uber.org/thriftrw/ptr"
 
 func foo(s string) *bool {
-	if to.StrPtr(s) == nil {
-		return to.BoolPtr(false)
+	if ptr.String(s) == nil {
+		return ptr.Bool(false)
 	}
 
-	return to.BoolPtr(true)
+	return ptr.Bool(true)
 }

-- remove_some.in.go --
package main

import (
	"fmt"

	"conversion/to.git"
)

func foo(s string) *bool {
	fmt.Println("Hello World")
	if to.StrPtr(s) == nil {
		return to.BoolPtr(false)
	}

	if to.DecimalPtr(s) == nil {
		return to.BoolPtr(false)
	}

	return to.BoolPtr(true)
}

-- remove_some.out.go --
package main

import (
	"fmt"

	"conversion/to.git"
	"go.uber.org/thriftrw/ptr"
)

func foo(s string) *bool {
	fmt.Println("Hello World")
	if ptr.String(s) == nil {
		return ptr.Bool(false)
	}

	if to.DecimalPtr(s) == nil {
		return ptr.Bool(false)
	}

	return ptr.Bool(true)
}

-- remove_some.diff --
--- remove_some.go
+++ remove_some.go
@@ -4,17 +4,18 @@
 	"fmt"
 
 	"conversion/to.git"
+	"go.uber.org/thriftrw/ptr"
 )
 
 func foo(s string) *bool {
 	fmt.Println("Hello World")
-	if to.StrPtr(s) == nil {
-		return to.BoolPtr(false)
+	if ptr.String(s) == nil {
+		return ptr.Bool(false)
 	}
 
 	if to.DecimalPtr(s) == nil {
-		return to.BoolPtr(false)
+		return ptr.Bool(false)
 	}
 
-	return to.BoolPtr(true)
+	return ptr.Bool(true)
 }
